
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Jun 12 13:44:33 EDT 2008
//----------------------------------------------------

package org.cocuyo.dsl.grammar;


/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Jun 12 13:44:33 EDT 2008
  */
public class CocuyoGrammarCupParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CocuyoGrammarCupParser() {super();}

  /** Constructor which sets the default scanner. */
  public CocuyoGrammarCupParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public CocuyoGrammarCupParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\115\000\002\002\004\000\002\002\004\000\002\003" +
    "\004\000\002\003\002\000\002\004\004\000\002\004\003" +
    "\000\002\005\003\000\002\005\003\000\002\006\004\000" +
    "\002\007\003\000\002\010\005\000\002\010\003\000\002" +
    "\011\003\000\002\012\004\000\002\012\003\000\002\013" +
    "\006\000\002\013\007\000\002\013\004\000\002\014\004" +
    "\000\002\014\002\000\002\015\005\000\002\015\006\000" +
    "\002\015\003\000\002\015\004\000\002\016\003\000\002" +
    "\016\006\000\002\016\003\000\002\016\003\000\002\016" +
    "\005\000\002\016\005\000\002\017\004\000\002\017\002" +
    "\000\002\020\005\000\002\021\004\000\002\021\002\000" +
    "\002\022\006\000\002\022\007\000\002\023\006\000\002" +
    "\023\005\000\002\024\004\000\002\024\002\000\002\025" +
    "\007\000\002\025\006\000\002\025\003\000\002\026\003" +
    "\000\002\027\003\000\002\030\005\000\002\030\003\000" +
    "\002\031\004\000\002\031\006\000\002\031\003\000\002" +
    "\032\005\000\002\032\004\000\002\032\006\000\002\032" +
    "\005\000\002\032\002\000\002\033\004\000\002\033\003" +
    "\000\002\034\003\000\002\034\004\000\002\034\004\000" +
    "\002\034\004\000\002\035\003\000\002\035\005\000\002" +
    "\036\003\000\002\036\005\000\002\036\007\000\002\036" +
    "\005\000\002\036\005\000\002\036\007\000\002\036\011" +
    "\000\002\036\007\000\002\037\004\000\002\037\003\000" +
    "\002\037\004\000\002\037\003\000\002\040\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\205\000\012\004\006\005\ufffe\007\ufffe\023\ufffe\001" +
    "\002\000\010\005\027\007\020\023\021\001\002\000\004" +
    "\002\015\001\002\000\004\035\007\001\002\000\066\002" +
    "\uffb5\005\uffb5\006\uffb5\007\uffb5\010\uffb5\011\uffb5\012\uffb5" +
    "\013\uffb5\014\uffb5\015\uffb5\016\uffb5\017\uffb5\020\uffb5\021" +
    "\uffb5\022\uffb5\023\uffb5\024\uffb5\025\uffb5\026\uffb5\027\uffb5" +
    "\030\uffb5\031\uffb5\032\uffb5\033\uffb5\034\uffb5\035\uffb5\001" +
    "\002\000\010\005\uffff\007\uffff\023\uffff\001\002\000\044" +
    "\002\ufff6\005\ufff6\006\ufff6\007\ufff6\010\ufff6\011\ufff6\012" +
    "\ufff6\013\ufff6\014\ufff6\015\ufff6\016\ufff6\017\ufff6\020\ufff6" +
    "\021\ufff6\022\ufff6\023\ufff6\035\ufff6\001\002\000\044\002" +
    "\ufff8\005\ufff8\006\013\007\ufff8\010\ufff8\011\ufff8\012\ufff8" +
    "\013\ufff8\014\ufff8\015\ufff8\016\ufff8\017\ufff8\020\ufff8\021" +
    "\ufff8\022\ufff8\023\ufff8\035\ufff8\001\002\000\004\035\007" +
    "\001\002\000\044\002\ufff7\005\ufff7\006\ufff7\007\ufff7\010" +
    "\ufff7\011\ufff7\012\ufff7\013\ufff7\014\ufff7\015\ufff7\016\ufff7" +
    "\017\ufff7\020\ufff7\021\ufff7\022\ufff7\023\ufff7\035\ufff7\001" +
    "\002\000\004\002\000\001\002\000\012\002\ufffa\005\ufffa" +
    "\007\ufffa\023\ufffa\001\002\000\014\013\ufff5\014\ufff5\017" +
    "\ufff5\023\ufff5\035\ufff5\001\002\000\006\010\145\035\007" +
    "\001\002\000\004\035\007\001\002\000\012\002\ufffb\005" +
    "\ufffb\007\ufffb\023\ufffb\001\002\000\012\002\ufffc\005\027" +
    "\007\020\023\021\001\002\000\016\007\020\013\ufff3\014" +
    "\ufff3\017\ufff3\023\ufff3\035\ufff3\001\002\000\004\002\001" +
    "\001\002\000\004\023\031\001\002\000\004\035\007\001" +
    "\002\000\012\002\ufff9\005\ufff9\007\ufff9\023\ufff9\001\002" +
    "\000\004\035\007\001\002\000\012\007\020\013\037\024" +
    "\uffd9\035\007\001\002\000\014\007\020\013\037\014\uffd9" +
    "\024\uffd9\035\007\001\002\000\004\024\135\001\002\000" +
    "\004\025\uffd5\001\002\000\004\025\132\001\002\000\012" +
    "\007\020\013\037\014\uffd9\035\007\001\002\000\014\007" +
    "\uffd6\013\uffd6\014\uffd6\024\uffd6\035\uffd6\001\002\000\006" +
    "\013\042\035\007\001\002\000\012\007\020\013\037\014" +
    "\uffd9\035\007\001\002\000\004\025\044\001\002\000\020" +
    "\007\uffca\010\uffca\013\045\017\uffca\026\uffca\027\uffca\035" +
    "\uffca\001\002\000\010\007\020\014\120\035\007\001\002" +
    "\000\006\011\uffd4\026\uffd4\001\002\000\010\011\uffd2\026" +
    "\uffd2\027\115\001\002\000\004\026\114\001\002\000\020" +
    "\007\020\010\052\011\uffcf\017\054\026\uffcf\027\uffcf\035" +
    "\007\001\002\000\020\007\uffca\010\uffca\011\uffca\013\045" +
    "\017\uffca\027\uffca\035\uffca\001\002\000\036\007\uffb8\010" +
    "\uffb8\011\uffb8\012\uffb8\017\uffb8\022\uffb8\026\uffb8\027\uffb8" +
    "\030\uffb8\031\uffb8\032\uffb8\033\uffb8\034\101\035\uffb8\001" +
    "\002\000\034\007\uffb6\010\uffb6\011\uffb6\012\uffb6\017\uffb6" +
    "\022\uffb6\026\uffb6\027\uffb6\030\uffb6\031\uffb6\032\uffb6\033" +
    "\uffb6\035\uffb6\001\002\000\030\007\020\010\052\011\uffc8" +
    "\017\054\026\uffc8\027\uffc8\030\uffc8\031\077\032\075\033" +
    "\076\035\007\001\002\000\030\007\uffc3\010\uffc3\011\uffc3" +
    "\017\uffc3\026\uffc3\027\uffc3\030\uffc3\031\uffc3\032\uffc3\033" +
    "\uffc3\035\uffc3\001\002\000\034\007\uffc1\010\uffc1\011\uffc1" +
    "\012\067\017\uffc1\022\070\026\uffc1\027\uffc1\030\uffc1\031" +
    "\uffc1\032\uffc1\033\uffc1\035\uffc1\001\002\000\030\007\uffc7" +
    "\010\uffc7\011\uffc7\017\uffc7\026\uffc7\027\uffc7\030\uffc7\031" +
    "\uffc7\032\uffc7\033\uffc7\035\uffc7\001\002\000\012\011\uffd1" +
    "\026\uffd1\027\uffd1\030\065\001\002\000\006\017\064\035" +
    "\007\001\002\000\034\007\uffb9\010\uffb9\011\uffb9\012\uffb9" +
    "\017\uffb9\022\uffb9\026\uffb9\027\uffb9\030\uffb9\031\uffb9\032" +
    "\uffb9\033\uffb9\035\uffb9\001\002\000\034\007\uffb7\010\uffb7" +
    "\011\uffb7\012\uffb7\017\uffb7\022\uffb7\026\uffb7\027\uffb7\030" +
    "\uffb7\031\uffb7\032\uffb7\033\uffb7\035\uffb7\001\002\000\010" +
    "\007\020\017\054\035\007\001\002\000\010\011\uffd0\026" +
    "\uffd0\027\uffd0\001\002\000\004\035\007\001\002\000\004" +
    "\035\007\001\002\000\032\007\uffc0\010\uffc0\011\uffc0\012" +
    "\072\017\uffc0\026\uffc0\027\uffc0\030\uffc0\031\uffc0\032\uffc0" +
    "\033\uffc0\035\uffc0\001\002\000\004\035\007\001\002\000" +
    "\030\007\uffbf\010\uffbf\011\uffbf\017\uffbf\026\uffbf\027\uffbf" +
    "\030\uffbf\031\uffbf\032\uffbf\033\uffbf\035\uffbf\001\002\000" +
    "\030\007\uffbe\010\uffbe\011\uffbe\017\uffbe\026\uffbe\027\uffbe" +
    "\030\uffbe\031\uffbe\032\uffbe\033\uffbe\035\uffbe\001\002\000" +
    "\030\007\uffc5\010\uffc5\011\uffc5\017\uffc5\026\uffc5\027\uffc5" +
    "\030\uffc5\031\uffc5\032\uffc5\033\uffc5\035\uffc5\001\002\000" +
    "\030\007\uffc4\010\uffc4\011\uffc4\017\uffc4\026\uffc4\027\uffc4" +
    "\030\uffc4\031\uffc4\032\uffc4\033\uffc4\035\uffc4\001\002\000" +
    "\030\007\uffc6\010\uffc6\011\uffc6\017\uffc6\026\uffc6\027\uffc6" +
    "\030\uffc6\031\uffc6\032\uffc6\033\uffc6\035\uffc6\001\002\000" +
    "\012\011\uffc9\026\uffc9\027\uffc9\030\uffc9\001\002\000\010" +
    "\007\020\017\054\035\007\001\002\000\034\007\uffb8\010" +
    "\uffb8\011\uffb8\012\uffb8\017\uffb8\022\uffb8\026\uffb8\027\uffb8" +
    "\030\uffb8\031\uffb8\032\uffb8\033\uffb8\035\uffb8\001\002\000" +
    "\034\007\uffbd\010\uffbd\011\uffbd\012\104\017\uffbd\022\105" +
    "\026\uffbd\027\uffbd\030\uffbd\031\uffbd\032\uffbd\033\uffbd\035" +
    "\uffbd\001\002\000\004\035\007\001\002\000\004\035\007" +
    "\001\002\000\032\007\uffbc\010\uffbc\011\uffbc\012\107\017" +
    "\uffbc\026\uffbc\027\uffbc\030\uffbc\031\uffbc\032\uffbc\033\uffbc" +
    "\035\uffbc\001\002\000\004\035\007\001\002\000\030\007" +
    "\uffbb\010\uffbb\011\uffbb\017\uffbb\026\uffbb\027\uffbb\030\uffbb" +
    "\031\uffbb\032\uffbb\033\uffbb\035\uffbb\001\002\000\030\007" +
    "\uffba\010\uffba\011\uffba\017\uffba\026\uffba\027\uffba\030\uffba" +
    "\031\uffba\032\uffba\033\uffba\035\uffba\001\002\000\004\011" +
    "\113\001\002\000\030\007\uffc2\010\uffc2\011\uffc2\017\uffc2" +
    "\026\uffc2\027\uffc2\030\uffc2\031\uffc2\032\uffc2\033\uffc2\035" +
    "\uffc2\001\002\000\014\007\uffd8\013\uffd8\014\uffd8\024\uffd8" +
    "\035\uffd8\001\002\000\022\007\uffca\010\uffca\011\uffca\013" +
    "\045\017\uffca\026\uffca\027\uffca\035\uffca\001\002\000\006" +
    "\011\uffd3\026\uffd3\001\002\000\004\014\125\001\002\000" +
    "\020\007\uffcd\010\uffcd\011\uffcd\017\uffcd\026\uffcd\027\uffcd" +
    "\035\uffcd\001\002\000\006\014\123\035\007\001\002\000" +
    "\004\014\124\001\002\000\020\007\uffcb\010\uffcb\011\uffcb" +
    "\017\uffcb\026\uffcb\027\uffcb\035\uffcb\001\002\000\020\007" +
    "\uffcc\010\uffcc\011\uffcc\017\uffcc\026\uffcc\027\uffcc\035\uffcc" +
    "\001\002\000\020\007\uffce\010\uffce\011\uffce\017\uffce\026" +
    "\uffce\027\uffce\035\uffce\001\002\000\004\014\127\001\002" +
    "\000\014\007\uffdc\013\uffdc\014\uffdc\024\uffdc\035\uffdc\001" +
    "\002\000\004\014\131\001\002\000\014\007\uffdb\013\uffdb" +
    "\014\uffdb\024\uffdb\035\uffdb\001\002\000\020\007\uffca\010" +
    "\uffca\013\045\017\uffca\026\uffca\027\uffca\035\uffca\001\002" +
    "\000\004\026\134\001\002\000\014\007\uffd7\013\uffd7\014" +
    "\uffd7\024\uffd7\035\uffd7\001\002\000\012\002\uffdd\005\uffdd" +
    "\007\uffdd\023\uffdd\001\002\000\006\014\uffda\024\uffda\001" +
    "\002\000\014\013\ufff4\014\ufff4\017\ufff4\023\ufff4\035\ufff4" +
    "\001\002\000\004\002\ufffd\001\002\000\012\007\020\013" +
    "\037\024\uffd9\035\007\001\002\000\004\024\143\001\002" +
    "\000\012\002\uffde\005\uffde\007\uffde\023\uffde\001\002\000" +
    "\020\007\ufff0\010\205\013\ufff0\014\ufff0\017\ufff0\023\ufff0" +
    "\035\ufff0\001\002\000\010\011\uffee\015\147\035\007\001" +
    "\002\000\016\011\uffeb\012\155\013\156\014\uffeb\015\uffeb" +
    "\035\uffeb\001\002\000\004\035\007\001\002\000\004\011" +
    "\153\001\002\000\012\011\uffee\014\uffee\015\147\035\007" +
    "\001\002\000\006\011\uffef\014\uffef\001\002\000\016\007" +
    "\ufff2\013\ufff2\014\ufff2\017\ufff2\023\ufff2\035\ufff2\001\002" +
    "\000\012\011\uffea\014\uffea\015\uffea\035\uffea\001\002\000" +
    "\014\013\161\016\166\017\162\020\163\035\007\001\002" +
    "\000\010\014\uffee\015\147\035\007\001\002\000\004\014" +
    "\160\001\002\000\012\011\uffec\014\uffec\015\uffec\035\uffec" +
    "\001\002\000\016\013\161\014\uffe2\016\166\017\162\020" +
    "\163\035\007\001\002\000\026\011\uffe6\013\uffe6\014\uffe6" +
    "\015\uffe6\016\uffe6\017\uffe6\020\uffe6\021\uffe6\022\uffe6\035" +
    "\uffe6\001\002\000\016\013\161\016\166\017\162\020\163" +
    "\021\uffdf\035\007\001\002\000\030\010\167\011\uffe9\013" +
    "\uffe9\014\uffe9\015\uffe9\016\uffe9\017\uffe9\020\uffe9\021\uffe9" +
    "\022\uffe9\035\uffe9\001\002\000\012\011\uffed\014\uffed\015" +
    "\uffed\035\uffed\001\002\000\026\011\uffe7\013\uffe7\014\uffe7" +
    "\015\uffe7\016\uffe7\017\uffe7\020\uffe7\021\uffe7\022\uffe7\035" +
    "\uffe7\001\002\000\010\011\uffee\015\147\035\007\001\002" +
    "\000\004\011\171\001\002\000\026\011\uffe8\013\uffe8\014" +
    "\uffe8\015\uffe8\016\uffe8\017\uffe8\020\uffe8\021\uffe8\022\uffe8" +
    "\035\uffe8\001\002\000\004\021\175\001\002\000\016\013" +
    "\161\016\166\017\162\020\163\021\uffdf\035\007\001\002" +
    "\000\004\021\uffe0\001\002\000\026\011\uffe5\013\uffe5\014" +
    "\uffe5\015\uffe5\016\uffe5\017\uffe5\020\uffe5\021\uffe5\022\uffe5" +
    "\035\uffe5\001\002\000\004\014\204\001\002\000\004\022" +
    "\202\001\002\000\016\013\161\014\uffe2\016\166\017\162" +
    "\020\163\035\007\001\002\000\004\014\uffe3\001\002\000" +
    "\014\013\161\016\166\017\162\020\163\035\007\001\002" +
    "\000\016\013\uffe1\014\uffe1\016\uffe1\017\uffe1\020\uffe1\035" +
    "\uffe1\001\002\000\026\011\uffe4\013\uffe4\014\uffe4\015\uffe4" +
    "\016\uffe4\017\uffe4\020\uffe4\021\uffe4\022\uffe4\035\uffe4\001" +
    "\002\000\010\011\uffee\015\147\035\007\001\002\000\004" +
    "\011\207\001\002\000\016\007\ufff1\013\ufff1\014\ufff1\017" +
    "\ufff1\023\ufff1\035\ufff1\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\205\000\006\002\004\003\003\001\001\000\020\004" +
    "\024\005\022\006\015\011\025\012\016\013\023\022\021" +
    "\001\001\000\002\001\001\000\010\007\007\010\011\040" +
    "\010\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\040\013\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\007\143\010\011\040\010\001\001\000" +
    "\004\040\140\001\001\000\002\001\001\000\020\004\137" +
    "\005\022\006\015\011\025\012\016\013\023\022\021\001" +
    "\001\000\006\012\136\013\023\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\007\027\010\011\040\010\001" +
    "\001\000\002\001\001\000\004\040\031\001\001\000\022" +
    "\011\040\012\016\013\023\023\037\024\033\025\032\026" +
    "\035\040\034\001\001\000\022\011\040\012\016\013\023" +
    "\023\037\024\135\025\032\026\035\040\034\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\011\040\012\016\013\023\023\037\024\127\025\032\026" +
    "\035\040\034\001\001\000\002\001\001\000\006\026\042" +
    "\040\034\001\001\000\022\011\040\012\016\013\023\023" +
    "\037\024\125\025\032\026\035\040\034\001\001\000\002" +
    "\001\001\000\012\027\047\030\045\031\046\032\050\001" +
    "\001\000\012\011\120\012\016\013\023\040\116\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\011\061\012\016\013\023\033\060\034\054\035\057" +
    "\036\055\037\056\040\052\001\001\000\012\027\111\030" +
    "\045\031\046\032\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\011\061\012\016\013\023\033\077\034" +
    "\054\035\057\036\055\037\056\040\052\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\040\062\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\011\061\012\016\013\023\036\065\037" +
    "\056\040\052\001\001\000\002\001\001\000\004\040\073" +
    "\001\001\000\004\040\070\001\001\000\002\001\001\000" +
    "\004\040\072\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\011\061\012\016\013\023\037\102" +
    "\040\101\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\040\110\001\001\000\004\040\105\001\001\000\002" +
    "\001\001\000\004\040\107\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\030\115\031\046\032\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\040\121\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\027" +
    "\132\030\045\031\046\032\050\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\011\040\012\016" +
    "\013\023\023\037\024\141\025\032\026\035\040\034\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\007\145\010\011\014\147\015\150\040\010\001" +
    "\001\000\002\001\001\000\010\007\153\010\011\040\010" +
    "\001\001\000\002\001\001\000\014\007\145\010\011\014" +
    "\151\015\150\040\010\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\007\163\010\011\016" +
    "\164\040\010\001\001\000\014\007\145\010\011\014\156" +
    "\015\150\040\010\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\007\163\010\011\016\176\017\175\020\177" +
    "\040\010\001\001\000\002\001\001\000\014\007\163\010" +
    "\011\016\172\021\171\040\010\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\007\145\010" +
    "\011\014\167\015\150\040\010\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\007\163\010" +
    "\011\016\172\021\173\040\010\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\007\163\010\011\016\176\017\200\020\177\040\010" +
    "\001\001\000\002\001\001\000\012\007\163\010\011\016" +
    "\202\040\010\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\007\145\010\011\014\205\015\150\040\010\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CocuyoGrammarCupParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CocuyoGrammarCupParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CocuyoGrammarCupParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
  
    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return getScanner().next_token(); 
    }
}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CocuyoGrammarCupParser$actions {
  private final CocuyoGrammarCupParser parser;

  /** Constructor */
  CUP$CocuyoGrammarCupParser$actions(CocuyoGrammarCupParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CocuyoGrammarCupParser$do_action(
    int                        CUP$CocuyoGrammarCupParser$act_num,
    java_cup.runtime.lr_parser CUP$CocuyoGrammarCupParser$parser,
    java.util.Stack            CUP$CocuyoGrammarCupParser$stack,
    int                        CUP$CocuyoGrammarCupParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CocuyoGrammarCupParser$result;

      /* select the action based on the action number */
      switch (CUP$CocuyoGrammarCupParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Id ::= ID 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Id",30, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Node ::= STRING_LITERAL 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Node",29, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Node ::= Decoration STRING_LITERAL 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Node",29, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Node ::= Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Node",29, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Node ::= Decoration Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Node",29, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Symbol ::= Id _MINUS Node _EQUAL Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-4)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Symbol ::= Id _MINUS Node _DPTO Id _EQUAL Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-6)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Symbol ::= Id _MINUS Node _DPTO Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-4)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Symbol ::= Id _MINUS Node 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Symbol ::= Node _EQUAL Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Symbol ::= Node _DPTO Id _EQUAL Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-4)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Symbol ::= Node _DPTO Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Symbol ::= Node 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Symbol",28, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // AltElement ::= _LPAR SubRule _RPAR 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltElement",27, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // AltElement ::= Symbol 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltElement",27, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // AltExpr ::= AltExpr _QUERY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltExpr",26, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // AltExpr ::= AltExpr _MUL 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltExpr",26, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // AltExpr ::= AltExpr _ADD 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltExpr",26, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // AltExpr ::= AltElement 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltExpr",26, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // AltExprList ::= AltExpr 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltExprList",25, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // AltExprList ::= AltExpr AltExprList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltExprList",25, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // AltId ::= 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltId",24, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // AltId ::= _LKEY Decoration _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltId",24, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // AltId ::= _LKEY Decoration Id _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltId",24, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // AltId ::= _LKEY _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltId",24, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // AltId ::= _LKEY Id _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AltId",24, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Alternative ::= AltId 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Alternative",23, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Alternative ::= AltId AltExprList _EQUAL_RANG Symbol 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Alternative",23, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Alternative ::= AltId AltExprList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Alternative",23, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // AlternativeList ::= Alternative 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AlternativeList",22, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // AlternativeList ::= Alternative _OR AlternativeList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("AlternativeList",22, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // SubRule ::= AlternativeList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("SubRule",21, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // RuleLeftSide ::= Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("RuleLeftSide",20, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Rule ::= RuleSet 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Rule",19, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Rule ::= RuleLeftSide _MINUS_RANG SubRule _PTOCOMMA 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Rule",19, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Rule ::= Decoration RuleLeftSide _MINUS_RANG SubRule _PTOCOMMA 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Rule",19, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-4)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // RuleList ::= 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("RuleList",18, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // RuleList ::= Rule RuleList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("RuleList",18, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // RuleSet ::= _LKEY RuleList _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("RuleSet",17, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // RuleSet ::= Decoration _LKEY RuleList _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("RuleSet",17, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Grammar ::= Decoration GRAMMAR Id RuleList END 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Grammar",16, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-4)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Grammar ::= GRAMMAR Id RuleList END 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Grammar",16, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ValueList ::= 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("ValueList",15, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ValueList ::= Value ValueList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("ValueList",15, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Entry ::= Value _DPTO Value 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Entry",14, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // EntryList ::= 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("EntryList",13, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // EntryList ::= Entry EntryList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("EntryList",13, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Value ::= _LKEY EntryList _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Value",12, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Value ::= _LCOR ValueList _RCOR 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Value",12, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Value ::= STRING_LITERAL 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Value",12, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Value ::= NUMBER_LITERAL 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Value",12, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Value ::= Name _LPAR PropertyList _RPAR 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Value",12, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Value ::= Name 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Value",12, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Property ::= _EXCLAM Name 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Property",11, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Property ::= Name 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Property",11, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Property ::= Name _LKEY PropertyList _RKEY 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Property",11, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Property ::= Name _EQUAL Value 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Property",11, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // PropertyList ::= 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("PropertyList",10, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PropertyList ::= Property PropertyList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("PropertyList",10, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Decorator ::= _AT Name 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Decorator",9, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Decorator ::= _AT Name _LPAR PropertyList _RPAR 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Decorator",9, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-4)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Decorator ::= _AT _LPAR PropertyList _RPAR 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Decorator",9, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-3)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // DecoratorList ::= Decorator 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("DecoratorList",8, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // DecoratorList ::= Decorator DecoratorList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("DecoratorList",8, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Decoration ::= DecoratorList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Decoration",7, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NameIdList ::= Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("NameIdList",6, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // NameIdList ::= NameIdList _PTO Id 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("NameIdList",6, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-2)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Name ::= NameIdList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Name",5, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Import ::= IMPORT Name 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("Import",4, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // UnitElement ::= Import 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("UnitElement",3, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // UnitElement ::= Grammar 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("UnitElement",3, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // UnitElementList ::= UnitElement 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("UnitElementList",2, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // UnitElementList ::= UnitElement UnitElementList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("UnitElementList",2, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // PackageDef ::= 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("PackageDef",1, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // PackageDef ::= PACKAGE Name 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("PackageDef",1, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= CompileUnit EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)).value;
		RESULT = start_val;
              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$CocuyoGrammarCupParser$parser.done_parsing();
          return CUP$CocuyoGrammarCupParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // CompileUnit ::= PackageDef UnitElementList 
            {
              Object RESULT =null;

              CUP$CocuyoGrammarCupParser$result = parser.getSymbolFactory().newSymbol("CompileUnit",0, ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.elementAt(CUP$CocuyoGrammarCupParser$top-1)), ((java_cup.runtime.Symbol)CUP$CocuyoGrammarCupParser$stack.peek()), RESULT);
            }
          return CUP$CocuyoGrammarCupParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

